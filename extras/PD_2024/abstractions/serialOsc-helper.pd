#N canvas 223 171 1265 720 12;
#X obj 453 216 sel 47;
#X msg 83 330 zlclear;
#X obj 349 714 cyclone/prepend 47;
#X floatatom 392 766 5 0 0 0 - - - 0;
#X obj 349 678 cyclone/zl.group 40, f 23;
#X obj 488 348 f;
#X obj 521 347 + 1;
#X floatatom 488 387 5 0 0 0 - - - 0;
#X obj 488 318 bng 16 250 50 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000;
#X msg 205 292 0;
#X floatatom 458 585 5 0 0 0 - - - 0;
#X floatatom 427 510 5 0 0 0 - - - 0;
#X obj 364 475 tgl 16 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 317 446 cyclone/uzi 14;
#X msg 446 484 0, f 1;
#X obj 83 252 t b b b b, f 51;
#X text 500 214 osc starts with a / = ascii 47;
#X text 530 677 group size controlled by counter;
#X text 538 390 count in coming bytes (between '/' );
#X text 480 713 put the initital '/' back in the message for osc parse;
#X text 876 368 All of this shenanigans is needed becasue the [comport] / serial port object tranlates raw binary needed for OSC into ASCII This is a dumb assumption that does not seem to be ajustable. So we need to get it back into OSC form;
#X obj 453 70 inlet;
#X obj 493 144 inlet;
#X text 505 70 data stream from comport object;
#X text 548 143 number (ascii code) for char that indicates end of message ??? NOT tested -- could be a symbol ???;
#X text 159 316 reset counter at end of message;
#X text 2 379 clear que and group of old data at end message;
#X text 255 393 push data from que into group;
#X obj 349 823 outlet;
#X text 412 820 data ready to be parsed by osc parse or ???;
#X obj 348 537 cyclone/zl queue;
#X connect 0 0 15 0;
#X connect 0 1 8 0;
#X connect 0 1 30 0;
#X connect 1 0 4 0;
#X connect 1 0 30 0;
#X connect 2 0 3 0;
#X connect 2 0 28 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 5 0 7 0;
#X connect 6 0 5 1;
#X connect 7 0 13 1;
#X connect 7 0 4 1;
#X connect 8 0 5 0;
#X connect 9 0 5 0;
#X connect 13 0 30 0;
#X connect 13 1 12 0;
#X connect 13 2 11 0;
#X connect 14 0 11 0;
#X connect 15 0 1 0;
#X connect 15 1 9 0;
#X connect 15 2 13 0;
#X connect 15 3 7 0;
#X connect 21 0 0 0;
#X connect 22 0 0 1;
#X connect 30 0 4 0;
#X connect 30 1 10 0;

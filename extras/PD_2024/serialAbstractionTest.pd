#N canvas 313 311 1031 707 12;
#X msg 39 21 devices;
#X floatatom 47 129 5 0 0 0 - - - 0;
#X obj 47 96 comport 2 9600;
#X obj 50 195 osc~;
#X obj 51 230 dac~;
#X obj 47 158 * 10;
#X msg 78 50 open 3;
#X msg 138 49 close 3;
#X text 86 130 all the raw data flows here -- in order;
#X obj 233 261 oscparse;
#X obj 289 287 print;
#X obj 233 315 list trim;
#X floatatom 246 488 5 0 0 0 - - - 0;
#X floatatom 300 443 0 0 0 0 - - - 0;
#X obj 233 416 unpack 0 0;
#X obj 305 343 print;
#X text 285 489 this;
#X text 337 425 that;
#X msg 317 320 hi;
#X text 424 367 the text in route is the address pattern being sent -- could have multiple here potentially;
#X obj 233 218 serialOsc-helper;
#X obj 234 516 print this;
#X obj 327 443 print that;
#X text 349 260 From here down is same as UDP-osc parse;
#X obj 233 375 route outgoingSerial;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 2 0 20 0;
#X connect 3 0 4 0;
#X connect 3 0 4 1;
#X connect 5 0 3 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 9 0 10 0;
#X connect 9 0 11 0;
#X connect 11 0 15 0;
#X connect 11 0 24 0;
#X connect 14 0 12 0;
#X connect 14 0 21 0;
#X connect 14 1 13 0;
#X connect 14 1 22 0;
#X connect 18 0 15 0;
#X connect 20 0 9 0;
#X connect 24 0 14 0;
